<%= form_with(model: @practice) do |form| %>
  <div class='card w-50'>
    <div class="card-body">
      <!-- Profile picture and short information -->
      <div class="d-flex align-items-center position-relative pb-3">
        <div class="flex-grow-1">
          <% if @practice.new_record? %>
            <div id="stopwatch" class="bg-primary rounded">
              <div class="timerDisplay text-light bg-dark p-2 rounded text-monospace fs-1">
                00 : <%= @practice.minutes.to_s.rjust(2, '0') %> : 00 : 000
              </div>
              <div class="buttons text-center p-1 bg-secondary">
                <button id="pauseTimer" class="btn btn-success me-2" type="button"><i class="bi bi-pause-circle"></i> Pause</button>
                <button id="startTimer" class="btn btn-primary me-2" type="button"><i class="bi bi-play-circle-fill"></i> Start</button>
                <button id="resetTimer" class="btn btn-danger" type="button"><i class="bi bi-x-circle"></i> Reset</button>
              </div>
            </div>
          <% end %>

          <% if current_user.foci.present? %>
            <%= form.label :focus_id, class: 'form-label' %>
            <%= form.select :focus_id, current_user.foci.map { |t| [t.short_description, t.id]}, { include_blank: "Choose a focus for this practice if you wish" }, class: "form-control" %>
          <% end %>
          <% if current_user.songs.present? %>
            <%= form.label :song_id, class: 'form-label' %>
            <%= form.select :song_id, current_user.songs.map { |t| [t.title, t.id]}, { include_blank: "Choose a song for this practice if you wish" }, class: "form-control" %>
          <% end %>
          <%= form.label :minutes, class: "form-label" %>
          <%= form.number_field :minutes, class: 'form-control' %>
          <%= form.label :practice_date, class: 'form-label' %>
          <%= form.datetime_field :practice_date, class: 'form-control' %>
        </div>
      </div>
      <%= form.label :notes, class: 'form-label' %>
      <%= form.text_area :notes, class: 'form-control' %>
      <!-- END : Profile picture and short information -->

      <!-- Options buttons -->
      <div class="mt-3 pt-2 text-center border-top">
        <div class="d-flex justify-content-center gap-3">
          <%= form.submit class: "btn btn-sm btn-info btn-outline-light btn-lg" %> <%= link_to "Cancel", practices_path, class: "btn btn-sm btn-info btn-outline-light btn-lg" %>
        </div>
      </div>
      <!-- END : Options buttons -->
    </div>
  </div>

  <% if @practice.new_record? %>
    <script type='application/javascript'>
      let start = Date.now();
      let end = Date.now();

      let [milliseconds,seconds,minutes,hours] = [0,0,<%= @practice.minutes %>,0];
      let timerRef = document.querySelector('.timerDisplay');
      let int = null;
      let minutesRef = document.getElementById('practice_minutes');
      document.getElementById('startTimer').addEventListener('click', ()=>{
          if(int!==null){
              clearInterval(int);
          }
          int = setInterval(displayTimer,10);
      });
      document.getElementById('pauseTimer').addEventListener('click', ()=>{
          clearInterval(int);
      });
      document.getElementById('resetTimer').addEventListener('click', ()=>{
          clearInterval(int);
          [milliseconds,seconds,minutes,hours] = [0,0,0,0];
          timerRef.innerHTML = '00 : 00 : 00 : 000 ';
          minutesRef.value = 0;
      });

      // calculate time elapsed since start's time. Return in minutes and set hours, minutes, seconds, and milliseconds
      function displayTimer(){
        end = Date.now();
        let elapsed = end - start;
        let elapsedMinutes = Math.floor(elapsed / 60000);
        hours = Math.floor(elapsedMinutes / 60);
        minutes = elapsedMinutes % 60;
        seconds = Math.floor((elapsed % 60000) / 1000);
        milliseconds = elapsed % 1000;
        // show hours, minutes, and seconds as two digits
        hours = hours.toString().padStart(2, '0');
        minutes = minutes.toString().padStart(2, '0');
        seconds = seconds.toString().padStart(2, '0');
        // show milliseconds as three digits
        milliseconds = milliseconds.toString().padStart(3, '0');
        timerRef.innerHTML = ` ${hours} : ${minutes} : ${seconds} : ${milliseconds}`;
        minutesRef.value = elapsedMinutes;
      }
    </script>
  <% end %>
<% end %>
